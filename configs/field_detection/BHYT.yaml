data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: dataset.field_detection.regiondataset
        class: RegionDataset
        RegionDataset:
          dirname: '''/extdata/ocr/thanhptt1/projects/BHYT/field_extraction/dataset/BHYT/train'''
          classes:
            BG: [[0, 0, 0], 0]
            V_NAME: [[0, 0, 255], 1]
            V_BD: [[0, 255, 0], 2]
            V_ID: [[255, 0, 0], 3]
            V_SEX: [[0, 255, 255], 4]
            V_A: [[255, 255, 0], 5]
            V_A1: [[255, 255, 0], 5]
            V_A2: [[255, 255, 0], 5]
            V_A3: [[255, 255, 0], 5]
            V_ISS: [[255, 0, 255], 6]
            V_TL: [[255, 255, 255], 7]
            DATE_1: [[128, 0, 0], 8]
            DATE_2: [[0, 128, 0], 9]
            DATE_3: [[0, 0, 128], 10]
            V_RP: [[0, 128, 128], 11]
            V_RP1: [[0, 128, 128], 11]
            V_RP2: [[0, 128, 128], 11]
          image_size: (384, 384)
          # transforms: '[
          #         iaa.Add(value=(-100, 100), per_channel=True),
          #         iaa.GaussianBlur(sigma=(0, 1)),
          #         iaa.MotionBlur(),
          #         iaa.Affine(rotate=(0, 360), shear=(-20, 20), fit_output=True),
          #         iaa.PerspectiveTransform(scale=(0, 0.1)),
          #         iaa.Crop(percent=(0, 0.1)),
          #         iaa.Pad(percent=(0, 0.1)),
          #         iaa.JpegCompression(compression=(0, 30)),
          #         iaa.Rot90(k=[0, 1, 2, 3], keep_size=False),
          #         iaa.Fliplr(p=0.5),
          #         iaa.Flipud(p=0.5),
          #         iaa.ChangeColorTemperature(),
          #         iaa.Clouds(),
          #         iaa.Dropout(),
          #     ]'
          transforms: '[
                  iaa.Add(value=(-50, 50), per_channel=True),
                  iaa.GaussianBlur(sigma=(0, 1)),
                  iaa.MotionBlur(),
                  iaa.Affine(rotate=(-10, 10), shear=(-10, 10), fit_output=True),
                  iaa.PerspectiveTransform(scale=(0, 0.1)),
                  iaa.ChangeColorTemperature(),
                  iaa.Clouds(),
                  iaa.Grayscale(alpha=[0.0, 1.0]),
              ]'
          # require_transforms: '[
          #         iaa.Rot90(k=[0, 1, 3, 4], keep_size=False),
          #     ]'
          image_pattern: '''**/*.*g'''
          mask_pattern: '''**/*.json'''
          is_textline: False
          h_factor: [0.5, 0.5]
          w_factor: [0, -0.02]
          is_pad_to_square: False
          ignore_field:  
      batch_size: 8
      pin_memory: True
      num_workers: 12
      drop_last: False
      shuffle: True

  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: dataset.field_detection.regiondataset
        class: RegionDataset
        RegionDataset:
          dirname: '''/extdata/ocr/thanhptt1/projects/BHYT/field_extraction/dataset/BHYT/train'''
          classes:
            BG: [[0, 0, 0], 0]
            V_NAME: [[0, 0, 255], 1]
            V_BD: [[0, 255, 0], 2]
            V_ID: [[255, 0, 0], 3]
            V_SEX: [[0, 255, 255], 4]
            V_A: [[255, 255, 0], 5]
            V_A1: [[255, 255, 0], 5]
            V_A2: [[255, 255, 0], 5]
            V_A3: [[255, 255, 0], 5]
            V_ISS: [[255, 0, 255], 6]
            V_TL: [[255, 255, 255], 7]
            DATE_1: [[128, 0, 0], 8]
            DATE_2: [[0, 128, 0], 9]
            DATE_3: [[0, 0, 128], 10]
            V_RP: [[0, 128, 128], 11]
            V_RP1: [[0, 128, 128], 11]
            V_RP2: [[0, 128, 128], 11]

          image_size: (384, 384)
          image_pattern: '''**/*.*g'''
          mask_pattern: '''**/*.json'''
          is_textline: False
          h_factor: [0.5, 0.5]
          w_factor: [0, -0.02]
          is_pad_to_square: False
          ignore_field:  
      batch_size: 16
      pin_memory: True
      num_workers: 12
      drop_last: False
      shuffle: True

  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: dataset.field_detection.regiondataset
        class: RegionDataset
        RegionDataset:
          dirname: '''/extdata/ocr/thanhptt1/projects/BHYT/field_extraction/dataset/BHYT/valid'''
          classes:
            BG: [[0, 0, 0], 0]
            V_NAME: [[0, 0, 255], 1]
            V_BD: [[0, 255, 0], 2]
            V_ID: [[255, 0, 0], 3]
            V_SEX: [[0, 255, 255], 4]
            V_A: [[255, 255, 0], 5]
            V_A1: [[255, 255, 0], 5]
            V_A2: [[255, 255, 0], 5]
            V_A3: [[255, 255, 0], 5]
            V_ISS: [[255, 0, 255], 6]
            V_TL: [[255, 255, 255], 7]
            DATE_1: [[128, 0, 0], 8]
            DATE_2: [[0, 128, 0], 9]
            DATE_3: [[0, 0, 128], 10]
            V_RP: [[0, 128, 128], 11]
            V_RP1: [[0, 128, 128], 11]
            V_RP2: [[0, 128, 128], 11]

          image_size: (384, 384)
          image_pattern: '''**/*.*g'''
          mask_pattern: '''**/*.json'''
          is_textline: False
          h_factor: [0.5, 0.5]
          w_factor: [0, -0.02]
          is_pad_to_square: False
          ignore_field:
      batch_size: 16
      pin_memory: True
      num_workers: 12
      drop_last: False
      shuffle: True

loss:
  module: loss.field_detection.dice
  class: MultiDice
  MultiDice:
    class_weight_alpha: 0.70
    output_transform: 'lambda x: (x[0], x[1])'
  
model:
  module: model.field_detection.fcn
  class: FCN
  FCN:
    backbone: '''resnet50'''
    backbone_fixed: False
    pretrained_backbone: True
    replace_stride_with_dilation: [True, True, True]
    num_classes: 12


optim:
  module: torch.optim
  class: Adam
  Adam:
    params: config['model'].parameters()
    lr: 0.001
    amsgrad: True

early_stopping:
  module: handler.early_stopping
  class: EarlyStopping
  EarlyStopping:
    evaluator_name: '''valid'''
    patience: 50
    delta: 0
    mode: '''min'''
    score_name: '''loss'''

writer:
  module: handler.writer
  class: Writer
  Writer:
    save_dir: '''checkpoint/BHYT/'''

logger:
  module: handler.logger
  class: Logger
  Logger:
    save_dir: '''checkpoint/BHYT/'''
    mode: logging.DEBUG
    format: '''%(asctime)s - %(name)s - %(levelname)s - %(message)s'''

plot:
  module: handler.plot
  class: Plot
  Plot:
    save_dir: '''checkpoint/BHYT/'''

lr_scheduler:
  module: torch.optim.lr_scheduler
  class: ReduceLROnPlateau
  ReduceLROnPlateau:
    optimizer: config['optim']
    mode: '''min'''
    factor: 0.1
    patience: 10
    verbose: True

model_info:
  module: trainer.utils
  class: ModelInfo
  ModelInfo:
    verbose: True
    input_shape: '(384, 384, 3)'

metric:
  module: metric.metric_base
  class: Metrics
  Metrics:
    metrics:
      loss:
        module: metric.loss
        class: Loss
        Loss:
          loss_fn: 
            module: loss.field_detection.dice
            class: MultiDice
            MultiDice:
              class_weight_alpha: 0.70
              output_transform: 'lambda x: (x[0], x[1])'
      segm_metrics:
        module: metric.metric_base
        class: Metrics
        Metrics:
          metrics:
            module: metric.field_detection.segm_metric
            class: SegmMetric
            SegmMetric:
              metric_name: '''mean_pixel_accuracy'''
              output_transform: 'lambda x: (x[0], x[1], x[2])'


trainer:
  module: trainer.trainer
  class: Trainer
  Trainer:
    model: config['model']
    data: config['data']
    loss: config['loss']
    optim: config['optim']
    metric: config['metric']
    early_stopping: config['early_stopping']
    lr_scheduler: config['lr_scheduler']
    logger: config['logger']
    writer: config['writer']
    plot: config['plot']
    model_info: config['model_info']
    save_dir: '''checkpoint/BHYT/'''

extralibs:
  torch: torch
  iaa: imgaug.augmenters
  logging: logging
  torchvision: torchvision
  transforms: torchvision.transforms
